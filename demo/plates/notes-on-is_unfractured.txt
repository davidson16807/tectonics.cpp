
`is_unfractured` returns true if two neighboring vertices should be considered apart of the same plate.
We model plate segmentation as a brittle fracture that occurs due to slab pull forces.
Slab pull is assumed to be proportionate but perpendicular to buoyancy force.
For the purpose of plate segmentation, we model slab pull as being proportionate to the gradient of buoyancy,
and since grid cells are roughly equal area, we simplify calculation 
by modeling slab pull as being proportionate to the gradient of buoyancy pressure.

Since plate segmentation is modeled as a brittle fracture due to slab pull forces, 
we model convergent boundaries as places where stress exceeds a compressive strength,
divergent boundaries as places where stress exceeds a tensile strength, 
and transition boundaries as places where stress exceeds a shear strength.
All strengths are derived empirically to produce the best qualitative behavior -
they are not required to reflect any known property of the material.
"Compressive" strength in particular does not model compressive strength in the real world,
since convergent boundaries likely emerge due to buckling and therefore represent a kind of shear failure.

Fracture between neighboring cells is modeled as is often done in physics.
Neighboring cells are characterized by midpoint vectors, A and B, and an offset, I=B-A.
Virtual displacements U and V are applied to A and B, respectively.
This produces a pair of updated virtual positions, A2 and B2, with offset I2=B2-A2.
There is also a basis vector J that is equal but perpendicular to I:

A2     I2    B2
   ∘-------∘
  U ↖     ↗ V
     ∘--→∘
   A |  I B
     ↓J

Virtual displacement along I indicates compressive or tensile stress,
whereas virtual displacement along J indicates shear stress.
More precisely, virtual displacement for a given axis (Δl) is the projection of displacement I2-I=V-U along I or J, or 

   Δl = (V-U)⋅E / l

where l=|E|, and E is a basis vector, either I or J. 
For any axis, stress (forcer per unit area, F/A) is proportionate to virtual displacement (Δl) along that axis,

  F/A = M Δl/l

where M is a modulus for the axis, which are captured within our empirical estimates for strength.

Although fracture between neighboring cells is well understood,
we cannot so easily use this understanding to predict behavior across the entire raster.
In the real world, the shape of a fractured region will influence the entire a stress field,
so fractures can in principle form anywhere else in the field during subsequent iterations.
In our model, we do not have the resources to repeatedly calculate stress for every cell in a raster,
so we must settle for approximations.
The approximation we settle on is an instance of the flood-fill algorithm.
At the start of a fracturing event, we select "seed" cells where our slab pull approximation is greatest.

