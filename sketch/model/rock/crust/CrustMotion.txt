
we use the conceptual model from Schellart 2010 to calculate plate velocity
see research/geology/tectonics-motion/schellart2010.pdf 
and research/geology/tectonics-motion/schellart2010-supplement.pdf 
Here's an intuitive explanation:
Imagine a foam mat floating in a swimming pool. 
One side of the foam mat has lead weights strapped to it. 
It's just barely enough to sink the mat. 
The foam mat slides across the surface and into the water. 
        
 ________ →     
 ~~~~~~~~\~~~~~~~~~
        ↓| 
         ° ← lead weight  

To simplify the situation, we say that the foam mat does not stretch and is too buoyant to founder by itself.
Given these simplifications, we know it must slide across the surface at the same rate it sinks. 
The rate at which it sinks is a constant, known as the terminal velocity.
This is the speed at which the drag force of the water counteracts the buoyant force of the lead weights.

 ________
 ~~~~~~~~\~~~~~~~~~
         |↓ buoyant force
         °↑ drag force

Replace the foam mat with a tectonic plate and 
you'll start to see how the model handles plate velocity.
There is a net buoyancy force (b) that causes slabs to subduct.
The slabs generate a drag force (d) as they pass through the mantle.
The drag force is a function of velocity, and the buoyant force is invariant to it.
The two forces reach an equilibrium where the velocity (v) of a region does not change. 
Since these forces are only noticeable over millions of years, 
by the time we notice their effect they should have already equilibrated. 
So we can't just simulate the forces over multiple timesteps. 
The forces involved could also vary greatly from planet to planet,
so we wouldn't even know what timesteps to use even if we want to use that approach.

So how about this, instead:
For there to be equilibrium, the sum of the forces must be zero. 
Since plates are assumed to be rigid bodies, 
we must consider the forces acting across the entire plate.
So ∫ b + d(v) dΩ = 0 where dΩ is the area of an infinitesimal localized subducting region. 
Since b does not vary based on v, we simplify this to
B + ∫ d(v) dΩ = 0 where B = ∫ b dΩ is the sum of net buoyancy forces.
Another way to phrase this is that ∫d(v)dΩ = -B,
so that drag forces must sum to a constant.
Also since plates are assumed to be rigid bodies,
the motion d(v) at each point is completely determined by 
a rotation vector for the entire rigid body, ω,
so the integral D(ω)=∫d(v)dΩ is completely determined by ω,
and since we are trying to determine the ω that minimizes the distance between D and B,
we can construct a distance metric such as (D(ω)-B)²,
and then perform gradient descent by calculating ∇(D(ω)-B)². 
We can start descent from any naïve assumption, 
such as to say that ω is proportionate to the rotation vector for B.
∇(D(ω)-B)² can be calculated using an in-order traversal of memory
without need to store large rasters of output,
so the performance of the gradient descent is inconsequential 
when compared to other calculations in the model.
Since (D(ω)-B)² equals 0 iff D(ω)=B,
we can further use optimization techniques such as Householder methods,
assuming we can overcome the risk of exploding corrections when gradients are small.

Now we have to specify what b and d are, exactly.
The net buoyancy force, b, is simply the sum of buoyancy and gravity.
The force of gravity is mg, where m is mass and g is gravitational acceleration.
For reasons that will become clear it is easier to think in terms of densities and volumes,
so we rephrase this as -mg = -ϱVg where ϱ is crust density and V is the volume of the solid. 
By Archimedes principle, buoyancy force is equivalent to the weight of displaced liquid,
so buoyancy force is ρVg where ρ is mantle density. 
Therefore the net buoyancy force is 

b = ρVg-ϱVg 
  = (ρ-ϱ)Vg 
  = ΔρVg where Δρ=ρ-ϱ.

The drag force, d, will vary by problem. 
We will start by discussing the drag equation for a sphere 
of a certain diameter, D, or radius, R=D/2,
and then adapt that equation to work with subducting slabs.

If the effect of inertia is significant, 
then the equation for drag is the same that is used in aviation, 
or ρv²CA/V for a given cross-sectional area, A, and drag coefficient, C.
However the dynamic viscosity of the mantle, μ, is very high 
compared to the diameter and velocity that we are working with,
so the effect of inertia is negligible.
This is indicated by a very low Reynolds number, Re=ρvD/μ.
In such circumstances the drag coefficient is inversely proportionate to velocity,
so drag becomes linear to velocity. 
Stokes (1851) was first to work out the drag for such circumstances.
In the case of a sphere, drag becomes d = 6πμRv = 3πμDv. 
Since the volume of a sphere is V = 4πR³/3 = πD³/6, the buoyancy is b=ΔρgπD³/6. 
Buoyancy and drag are equal, so:

   b     =   d
ΔρgπD³/6 = 3πμDv

so we can solve for v, which is the terminal velocity of a sphere through the mantle.

ΔρgπD²
⎻⎻⎻⎻⎻⎻ = v
 18πμ

Schellart (2010) makes the assumption that slabs are shaped as ellipsoids. 
Oberbeck (1876) worked out the equations for this circumstance,
but his work is in German and I haven't figured out if he explicitly states the drag force.
However Kerr (1991) provides the terminal velocity for ellipsoids, 
which is simply the equation for a sphere of equivalent diameter D³=LTW
except scaled by a shape factor, S:

SΔρgπ(LTW)²𝄍³
⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻ = v
    18πμ

where "W" is the width of the slab running along the subduction zone,
"T" is thickness, and "L" is the length of the subducted region, 
which Schellart (2010) sets at a constant L=1000km.
"S" is given by Kerr (1991) for settling parallel to L:

       ⌠∞  2L²+λ          (LTW)¹𝄍³
S = ³/₈⎮  ⎻⎻⎻⎻⎻⎻⎻ ⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻ dλ
       ⌡0   L²+λ  √((L²+λ)(T²+λ)(W²+λ))

We note that if we adopt a different factor:

       ⌠∞  2a²+λ            1
ς = ³/₈⎮  ⎻⎻⎻⎻⎻⎻⎻ ⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻⎻ dλ
       ⌡0   a²+λ   √(a²+λ)(b²+λ)(c²+λ)

then the equation for terminal velocity simplifies to:

ςΔρgπLTW
⎻⎻⎻⎻⎻⎻⎻⎻ = v
  18πμ

We now know the terminal velocity for ellipsoids, 
and we can figure out the net buoyancy for ellipsoids,
so we can use this information to reconstruct the drag force.
Net buoyancy for ellipsoids is:

b = ΔρgV where V=4πLTW/3
  = 4πΔρgLTW/3

We know that 

ςΔρgπLTW
⎻⎻⎻⎻⎻⎻⎻⎻ = v
  18πμ

and therefore

ςΔρgπLTW
⎻⎻⎻⎻⎻⎻⎻⎻ = 1
  18πμv

We also know that b=d and therefore 1=b/d, so:

ςΔρgπLTW   b
⎻⎻⎻⎻⎻⎻⎻⎻ = ⎻ = 1
  18πμv    d

invert and multiply all sides by b:

 18πμvb
⎻⎻⎻⎻⎻⎻⎻⎻ = d = b
ςΔρgπLTW

sustitute b and simplify:

24μvπ/ς = d

At this point, it would be useful if we could assume that for all local regions of subduction, dΩ, 
the flow around that local region can be approximated as the flow around an ellipsoid.
If this were the case, then forces for the slab could be modeled as the sum of ellipsoid slab segments, one per cell.
Buoyancy is obviously linear to W, and given that L and T do not vary significantly throughout a slab,
the validity of this assumption relies on the extent to which d is linear to W.
We see that ςd is constant for any W, so for this assumption to be valid,
ς must not appreciably scale with W for the region of interest.
ς does saturate for sufficiently large W/L (https://www.desmos.com/calculator/cibmmztres)
so local forces could be calculated as ellipsoid segments,
but only so long as those segments are much wider than their the nominal 1000km length,
and even the coarsest resolutions are expected to have cells of width that fall below this threshold.

So we try a different approach out of necessity. 
We note that drag force for ellipsoids scales linear to velocity,
so we can estimate drag force d acting on a representative slab for some reference velocity v̄,
then use that estimate to calculate each slab segment's contribution to drag for the reference velocity,
then scale each segment's contribution to their local velocity v.
So for a given cell with velocity v in a plate whose subducted region(s) 
are composed of N cells, that cell's contribution to drag force is

       vd(u)
δ(v) = ⎻⎻⎻⎻⎻
        uN

where d(u) is the drag for an ellipsoid whose dimensions equal the slab when straighted out,
and whose velocity u is any reference value.
If Δ is defined as Δ=∫δ(v)dΩ (so that by analogy d:D::δ:Δ), 
then Δ=d(v) in the degenerate case where the slab is straight and traveling at a uniform velocity.
In all other cases, serviceability requires the untested assumption that 
local flow will not vary significantly for any amount of bending or interruption that can be expected of a slab. 
Nevertheless, it's the only approach that I'm currently aware of
that degenerates to a well-tested approach while permitting use on a 2d manifold.

Since the plate is a rigid body, no matter what forces act upon it,
its motion will always be described by a rotation vector ω,
and that rotation vector will characterize the local velocity of every cell.
So although slab segments would initially impart forces in the direction of their boundary normal,
in the time it takes to run a single timestep they will assume a horizontal velocity determined by ω,
and since (under our assumptions) their vertical velocity is always of magnitude equal to horizontal velocity,
that ω will completely determine vertical velocity, and thereby determine the drag force.
Therefore, we can express Δ as a function of angular velocity ω, 
and the ω of the plate will be the one that minimizes (Δ(ω)-B)² so that (Δ(ω)-B)²=0.
